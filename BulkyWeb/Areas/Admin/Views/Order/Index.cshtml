@{
    //Razor code
    //retrieving the status basedon the query string that we have in the url
    var status = Context.Request.Query["status"];
    //Givingthem all a defaut class of text-primary
    var pending = "text-primary";
    var inprocess = "text-primary";
    var completed = "text-primary";
    var approved = "text-primary";
    var all = "text-primary";

    switch (status)
    {
        case "pending":
            pending = "active text-white bg-primary";
            break;
        case "inprocess":
            inprocess = "active text-white bg-primary";
            break;
        case "completed":
            completed = "active text-white bg-primary";
            break;
        case "approved":
            approved = "active text-white bg-primary";
            break;
        default:
            all = "active text-white bg-primary";
            break;
    }
    //Then we dynamically assign these variables
}

<!--Don't need a model here because we are getting it from datatable-->

<div class="card shadow border-0 my-4 pb-lg-5">
    <div class="card-header bg-secondary bg-gradient ml-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2"> Order List</h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <div class="d-flex justify-content-between pb-5 pt-2"> 
            <span></span>
            <ul class="list-group list-group-horizontal-sm"> 
                <a class="text-decoration-none" asp-controller="Order" asp-action="Index" asp-route-status="inprocess">
                    <!--Still an index action because we are still listing the products -->
                    <li class="list-group-item @inprocess">In Process</li>
                </a> 
                <a class="text-decoration-none" asp-controller="Order" asp-action="Index" asp-route-status="pending">
                   
                    <li class="list-group-item @pending">Payment Pending</li>
                </a>
                <a class="text-decoration-none" asp-controller="Order" asp-action="Index" asp-route-status="completed">
                    
                <li class="list-group-item @completed">Completed</li>
                </a>
                <a class="text-decoration-none" asp-controller="Order" asp-action="Index" asp-route-status="approved">
                    
                <li class="list-group-item @approved">Approved</li>
                </a>
                <a class="text-decoration-none" asp-controller="Order" asp-action="Index" asp-route-status="all">
                  
                <li class="list-group-item @all">All</li>
                </a>
            </ul>
        </div>
        
        <table id="tblData" class="table table-bordered table-striped" width="100%">
            <!--datatablw will take care of configuring this. We just ned to add he js code-->
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Phone Number</th>
                    <th>Email</th>
                    <th>Status</th>
                    <th>Total</th>
                    <th></th> <!--to create a third column-->
                </tr>
            </thead>
            
        </table>
    </div>
</div>

@section Scripts {
    <script src="~/js/order.js"></script>
}